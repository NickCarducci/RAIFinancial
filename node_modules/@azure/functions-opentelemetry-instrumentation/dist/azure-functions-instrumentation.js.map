{"version":3,"file":"azure-functions-instrumentation.js","mappings":"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","sources":["webpack://@azure/functions-opentelemetry-instrumentation/./src/constants.ts","webpack://@azure/functions-opentelemetry-instrumentation/./src/instrumentation.ts","webpack://@azure/functions-opentelemetry-instrumentation/external commonjs2 \"@opentelemetry/api\"","webpack://@azure/functions-opentelemetry-instrumentation/external commonjs2 \"@opentelemetry/api-logs\"","webpack://@azure/functions-opentelemetry-instrumentation/external commonjs2 \"@opentelemetry/instrumentation\"","webpack://@azure/functions-opentelemetry-instrumentation/webpack/bootstrap","webpack://@azure/functions-opentelemetry-instrumentation/./src/index.ts"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport const version = '0.1.0';\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport type * as AzFunc from '@azure/functions';\r\nimport { context as otelContext, propagation } from '@opentelemetry/api';\r\nimport { SeverityNumber } from '@opentelemetry/api-logs';\r\nimport {\r\n    InstrumentationBase,\r\n    InstrumentationConfig,\r\n    InstrumentationNodeModuleDefinition,\r\n} from '@opentelemetry/instrumentation';\r\nimport { version } from './constants';\r\n\r\nexport class AzureFunctionsInstrumentation extends InstrumentationBase {\r\n    private _azFuncDisposable: AzFunc.Disposable | undefined;\r\n\r\n    constructor(config: InstrumentationConfig = {}) {\r\n        super('@azure/functions-opentelemetry-instrumentation', version, config);\r\n    }\r\n\r\n    protected init() {\r\n        return new InstrumentationNodeModuleDefinition(\r\n            '@azure/functions',\r\n            ['^4.5.0'],\r\n            (moduleExports: typeof AzFunc) => this._patch(moduleExports),\r\n            (moduleExports: typeof AzFunc) => this._unPatch(moduleExports)\r\n        );\r\n    }\r\n\r\n    private _patch(azFunc: typeof AzFunc): typeof AzFunc {\r\n        const disposables: AzFunc.Disposable[] = [];\r\n\r\n        // Tell the Azure Functions Host that we will send logs directly from Node.js\r\n        // (so that the host doesn't duplicate)\r\n        azFunc.app.setup({\r\n            capabilities: {\r\n                WorkerOpenTelemetryEnabled: true,\r\n            },\r\n        });\r\n\r\n        // Send logs directly from Node.js\r\n        disposables.push(\r\n            azFunc.app.hook.log((context) => {\r\n                this.logger.emit({\r\n                    body: context.message,\r\n                    severityNumber: toOtelSeverityNumber(context.level),\r\n                    severityText: context.level,\r\n                });\r\n            })\r\n        );\r\n\r\n        // Ensure Azure Functions Host trace context is propagated onto the user's Node.js function handler\r\n        disposables.push(\r\n            azFunc.app.hook.preInvocation((context) => {\r\n                const traceContext = context.invocationContext.traceContext;\r\n                if (traceContext) {\r\n                    context.functionHandler = otelContext.bind(\r\n                        propagation.extract(otelContext.active(), {\r\n                            traceparent: traceContext.traceParent,\r\n                            tracestate: traceContext.traceState,\r\n                        }),\r\n                        context.functionHandler\r\n                    );\r\n                }\r\n            })\r\n        );\r\n\r\n        this._azFuncDisposable = azFunc.Disposable.from(...disposables);\r\n        return azFunc;\r\n    }\r\n\r\n    private _unPatch(azFunc: typeof AzFunc): void {\r\n        this._azFuncDisposable?.dispose();\r\n\r\n        azFunc.app.setup({\r\n            capabilities: {\r\n                WorkerOpenTelemetryEnabled: false,\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nfunction toOtelSeverityNumber(level: AzFunc.LogLevel): SeverityNumber {\r\n    switch (level) {\r\n        case 'information':\r\n            return SeverityNumber.INFO;\r\n        case 'debug':\r\n            return SeverityNumber.DEBUG;\r\n        case 'error':\r\n            return SeverityNumber.ERROR;\r\n        case 'trace':\r\n            return SeverityNumber.TRACE;\r\n        case 'warning':\r\n            return SeverityNumber.WARN;\r\n        case 'critical':\r\n            return SeverityNumber.FATAL;\r\n        default:\r\n            return SeverityNumber.UNSPECIFIED;\r\n    }\r\n}\r\n","module.exports = require(\"@opentelemetry/api\");","module.exports = require(\"@opentelemetry/api-logs\");","module.exports = require(\"@opentelemetry/instrumentation\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport { AzureFunctionsInstrumentation } from './instrumentation';\r\n"],"names":[],"sourceRoot":""}